{"version":3,"file":"static/js/570.8d4720db.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","utils/notifications.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"addBtn\":\"ContactForm_addBtn__CACuJ\"};","import { toast } from 'react-toastify';\n\nexport const successToast = text => {\n  toast.success(text, {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'dark',\n  });\n};\n\nexport const errorToast = text => {\n  toast.error(text, {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'dark',\n  });\n};\n\nexport const alreadyExistsToast = text => {\n  toast.warn(text, {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'dark',\n  });\n};\n","import React, { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport {\n  successToast,\n  errorToast,\n  alreadyExistsToast,\n} from 'utils/notifications';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from 'redux/contactsSlice';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const { data: contacts } = useGetContactsQuery();\n  const [addContact, { isLoading, isSuccess }] = useAddContactMutation();\n\n  const handleAddContact = async e => {\n    e.preventDefault();\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLocaleLowerCase()\n      )\n    ) {\n      alreadyExistsToast(`Contact ${name} already exists`);\n      return;\n    }\n    const contact = { name, phone };\n    try {\n      await addContact(contact);\n\n      if (isSuccess) {\n        successToast('Contact added ');\n        setName('');\n        setPhone('');\n      }\n    } catch (err) {\n      errorToast(err.message);\n    }\n  };\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      case 'number':\n        setPhone(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form className={css.form} autoComplete=\"off\" onSubmit={handleAddContact}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.input}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.label}>\n        Number\n        <input\n          className={css.input}\n          value={phone}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be at least 5 digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        ></input>\n      </label>\n      <button className={css.addBtn} type=\"submit\" disabled={!name || !phone}>\n        {isLoading ? 'Loading...' : ' Add contact'}\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactItem_contactItem__Z4FuP\",\"button\":\"ContactItem_button__IRFBz\"};","import PropTypes from 'prop-types';\nimport css from './ContactItem.module.css';\nimport { useDeleteContactMutation } from 'redux/contactsSlice';\nimport { successToast } from 'utils/notifications';\n\nexport const ContactItem = ({ name, phone, id }) => {\n  const [deleteContact, { isSuccess, isLoading }] = useDeleteContactMutation();\n\n  if (isSuccess) {\n    successToast('Contact deleted');\n  }\n\n  return (\n    <li className={css.contactItem}>\n      <p>{name}</p>\n      <p>{phone}</p>\n\n      <button\n        className={css.button}\n        onClick={() => deleteContact(id)}\n        type=\"button\"\n        disabled={isLoading}\n      >\n        {isLoading ? 'Deleting...' : 'Delete'}\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"loading\":\"ContactList_loading__QJfkF\"};","import { ContactItem } from 'components/ContactItem/ContactItem';\nimport css from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/filterSlice';\n\nimport { useGetContactsQuery } from 'redux/contactsSlice';\n\nexport const ContactList = () => {\n  const filter = useSelector(getFilter);\n  const { data: contacts, error, isLoading } = useGetContactsQuery();\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLocaleLowerCase().trim();\n\n    if (contacts) {\n      return contacts.filter(contact =>\n        contact.name.toLocaleLowerCase().includes(normalizedFilter)\n      );\n    }\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <>\n      {isLoading && <div className={css.loading}>Loading...</div>}\n\n      {contacts && (\n        <ul className={css.contactList}>\n          {filteredContacts.length !== 0 ? (\n            filteredContacts.map(({ name, phone, id }) => {\n              return (\n                <ContactItem\n                  key={id}\n                  id={id}\n                  name={name}\n                  phone={phone}\n                ></ContactItem>\n              );\n            })\n          ) : (\n            <li> Contact {filter} not found </li>\n          )}\n        </ul>\n      )}\n\n      {error && <p>Ups, something was wrong!</p>}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\",\"label\":\"Filter_label__vEd1E\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { changeFilter, getFilter } from 'redux/filterSlice';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleChangeFilter = e => {\n    dispatch(changeFilter(e.target.value));\n  };\n\n  return (\n    <>\n      <label className={css.label}>\n        Find contacts by name\n        <input\n          className={css.input}\n          type=\"text\"\n          value={filter}\n          onChange={handleChangeFilter}\n        ></input>\n      </label>\n    </>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport css from 'components/App.module.css';\n\nconst Contacts = () => {\n  return (\n    <>\n      <h1 className={css.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={css.title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["successToast","text","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","errorToast","ContactForm","useState","name","setName","phone","setPhone","contacts","useGetContactsQuery","data","useAddContactMutation","addContact","isLoading","isSuccess","handleAddContact","e","preventDefault","some","contact","toLowerCase","toLocaleLowerCase","message","handleChange","target","value","className","css","autoComplete","onSubmit","onChange","type","pattern","title","required","disabled","ContactItem","id","useDeleteContactMutation","deleteContact","onClick","ContactList","filter","useSelector","getFilter","error","filteredContacts","normalizedFilter","trim","includes","getFilteredContacts","length","map","Filter","dispatch","useDispatch","changeFilter"],"sourceRoot":""}