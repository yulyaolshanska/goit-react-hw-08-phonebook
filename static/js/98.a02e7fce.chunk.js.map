{"version":3,"file":"static/js/98.a02e7fce.chunk.js","mappings":"4PAiGA,UApFkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MAGXC,GAAaC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,UAAf,IAEpC,GAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACHL,EAASM,GACT,MACF,IAAK,WACHJ,EAAYI,GACZ,MACF,QACE,OAEL,EAYKC,GAAWC,EAAAA,EAAAA,UAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRF,EAASG,QAAQC,OAClB,GAAE,KAGD,UAAC,IAAD,CAAWC,UAAU,iCAArB,WACE,oCAEA,UAAC,IAAD,CAAMA,UAAU,4BAA4BC,SAf3B,SAAAC,GACnBA,EAAEC,iBACFvB,EAASwB,EAAAA,EAAAA,MAAqB,CAAEjB,MAAAA,EAAOE,SAAAA,IACxC,EAYG,WACE,UAAC,IAAD,CACEW,UAAU,kCACVK,UAAU,sBAFZ,WAIE,SAAC,IAAD,CAAKC,GAAI,EAAT,oBACA,SAAC,IAAD,CAAKA,GAAI,GAAIN,UAAU,4BAAvB,UACE,SAAC,IAAD,CACEN,MAAOP,EACPoB,KAAK,QACLC,YAAY,cACZf,KAAK,QACLgB,SAAUlB,EACVmB,IAAKf,UAKX,UAAC,IAAD,CAAWK,UAAU,OAAOK,UAAU,yBAAtC,WACE,SAAC,IAAD,CAAKC,GAAI,EAAT,uBACA,SAAC,IAAD,CAAKA,GAAI,GAAT,UACE,SAAC,IAAD,CACEG,SAAUlB,EACVG,MAAOL,EACPI,KAAK,WACLc,KAAK,WACLC,YAAY,yBAIlB,SAAC,IAAD,WACE,SAAC,IAAD,CAAKF,GAAI,GAAT,UACE,SAAC,IAAD,CAAQK,UAAWxB,IAAUE,EAAUkB,KAAK,SAA5C,SACGzB,EAAa,aAAe,qBAO1C,C,2KCrFK8B,EAAsBC,EAAAA,YAAiB,WAQ1CH,GAAQ,IAPTI,EAOS,EAPTA,GACAC,EAMS,EANTA,SACAC,EAKS,EALTA,QACAC,EAIS,EAJTA,KACAC,EAGS,EAHTA,OACAlB,EAES,EAFTA,UACGmB,GACM,YACHC,GAASC,EAAAA,EAAAA,IAAmBN,EAAU,OAC5C,GAEKO,EAAAA,EAAAA,KAAe,QAClBC,QAAST,GACNK,IAJL,eAAOK,EAAP,KAMMC,EANN,KACEF,QAMF,OAAoBG,EAAAA,EAAAA,KAAKD,GAAD,QAAC,kBAAgBD,GACpCL,GADmB,IAEtBT,IAAKA,EACLV,UAAW2B,IAAW3B,EAAWoB,EAAQF,GAAU,SAAUF,GAAW,GAAJ,OAAOI,EAAP,YAAiBJ,GAAWC,GAAQ,GAAJ,OAAOG,EAAP,YAAiBH,GAAQE,EAAMS,MAAQT,EAAMR,UAAY,cAEhK,IACDC,EAAOiB,YAAc,SACrBjB,EAAOkB,aA7Bc,CACnBd,QAAS,UACTE,QAAQ,EACRP,UAAU,GA2BZ,K","sources":["pages/LogIn/LogIn.jsx","../node_modules/react-bootstrap/esm/Button.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Button, Col, FormControl, FormGroup } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form';\nimport { Container } from 'react-bootstrap';\n// import 'react-toastify/dist/ReactToastify.css';\n\n// import { successToast, errorToast } from 'utils/notifications';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport authOperations from 'redux/auth/authOperations';\nimport { useRef } from 'react';\n// import authSelectors from 'redux/auth/authSelectors';\n\nconst LogInView = () => {\n  const dispatch = useDispatch();\n  // const isError = useSelector(authSelectors.getIsError);\n  // const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const isTryEnter = useSelector(state => state.auth.isTryEnter);\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  // const resetForm = () => {\n  //   setEmail('');\n  //   setPassword('');\n  // };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n  };\n\n  const emailRef = useRef();\n\n  useEffect(() => {\n    emailRef.current.focus();\n  }, []);\n\n  return (\n    <Container className=\"mt-5 justify-content-md-center\">\n      <h1>Log In</h1>\n\n      <Form className=\"justify-content-sm-center\" onSubmit={handleSubmit}>\n        <FormGroup\n          className=\"mb-4 justify-content-md-center \"\n          controlId=\"formHorizontalEmail\"\n        >\n          <Col sm={2}>Email</Col>\n          <Col sm={10} className=\"justify-content-md-center\">\n            <FormControl\n              value={email}\n              type=\"email\"\n              placeholder=\"Enter email\"\n              name=\"email\"\n              onChange={handleChange}\n              ref={emailRef}\n            />\n          </Col>\n        </FormGroup>\n\n        <FormGroup className=\"mb-4\" controlId=\"formHorizontalPassword\">\n          <Col sm={2}>Password</Col>\n          <Col sm={10}>\n            <FormControl\n              onChange={handleChange}\n              value={password}\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Enter password\"\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup>\n          <Col sm={10}>\n            <Button disabled={!email || !password} type=\"submit\">\n              {isTryEnter ? 'Loading...' : ' Log In'}\n            </Button>\n          </Col>\n        </FormGroup>\n      </Form>\n    </Container>\n  );\n};\n\nexport default LogInView;\n\n/* <form onSubmit={handleSubmit}>\n        <label>\n          Email\n          <input\n            onChange={handleChange}\n             ref={emailRef}\n            type=\"email\"\n            name=\"email\"\n            value={email}\n          />\n        </label>\n        <label>\n          Password\n          <input\n            onChange={handleChange}\n            type=\"password\"\n            name=\"password\"\n            value={password}\n          />\n        </label>\n        <button type=\"submit\">Log In</button>\n      </form>  */\n\n// useEffect(() => {\n//   if (!isError && isLoggedIn) {\n//     console.log('wrong');\n\n//     successToast('You have successfully logged into your account.');\n//     resetForm();\n//   }\n//   if (isError && !isTryEnter) {\n//     console.log('wrong');\n//     console.log('isError', isError);\n//     console.log('isLoggedIn', isLoggedIn);\n\n//     errorToast(\n//       'You entered the wrong username or password, please try again.'\n//     );\n//   }\n// }, [isError, isLoggedIn, isTryEnter]);\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...buttonProps,\n    ...props,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;"],"names":["dispatch","useDispatch","isTryEnter","useSelector","state","auth","useState","email","setEmail","password","setPassword","handleChange","target","name","value","emailRef","useRef","useEffect","current","focus","className","onSubmit","e","preventDefault","authOperations","controlId","sm","type","placeholder","onChange","ref","disabled","Button","React","as","bsPrefix","variant","size","active","props","prefix","useBootstrapPrefix","useButtonProps","tagName","buttonProps","Component","_jsx","classNames","href","displayName","defaultProps"],"sourceRoot":""}