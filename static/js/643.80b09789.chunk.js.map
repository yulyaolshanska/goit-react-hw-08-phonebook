{"version":3,"file":"static/js/643.80b09789.chunk.js","mappings":"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","sources":["pages/Register/Register.jsx","utils/notifications.js","../node_modules/react-bootstrap/esm/Button.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport authOperations from 'redux/auth/authOperations';\n\nimport { Button, Col, FormControl, FormGroup } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form';\nimport { Container } from 'react-bootstrap';\nimport authSelectors from 'redux/auth/authSelectors';\nimport { errorToast, successToast } from 'utils/notifications';\n\nconst RegisterView = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const isError = useSelector(authSelectors.getIsError);\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const isTryEnter = useSelector(state => state.auth.isTryEnter);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  useEffect(() => {\n    if (!isError && isLoggedIn) {\n      successToast('You have successfully logged into your account.');\n      resetForm();\n    } else if (isError && !isTryEnter) {\n      errorToast(\n        'You entered the wrong username or password, please try again.'\n      );\n    }\n  }, [isError, isLoggedIn, isTryEnter]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n  };\n\n  return (\n    <Container className=\"mt-5 justify-content-md-center\">\n      <h1>Register</h1>\n\n      <Form onSubmit={handleSubmit}>\n        <FormGroup className=\"mb-3\" controlId=\"formHorizontalName\">\n          <Col sm={2}>Name</Col>\n          <Col sm={10} className=\"justify-content-md-center\">\n            <FormControl\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              placeholder=\"Enter name\"\n              onChange={handleChange}\n            />\n          </Col>\n        </FormGroup>\n\n        <FormGroup className=\"mb-3\" controlId=\"formHorizontalEmail\">\n          <Col sm={2}>Email</Col>\n          <Col sm={10} className=\"justify-content-md-center\">\n            <FormControl\n              value={email}\n              type=\"email\"\n              placeholder=\"Enter email\"\n              name=\"email\"\n              onChange={handleChange}\n            />\n          </Col>\n        </FormGroup>\n\n        <FormGroup className=\"mb-3\" controlId=\"formHorizontalPassword\">\n          <Col sm={2}>Password</Col>\n          <Col sm={10}>\n            <FormControl\n              onChange={handleChange}\n              value={password}\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Enter password\"\n            />\n          </Col>\n        </FormGroup>\n        <FormGroup>\n          <Col sm={10}>\n            <Button disabled={!name || !email || !password} type=\"submit\">\n              Register\n            </Button>\n          </Col>\n        </FormGroup>\n      </Form>\n    </Container>\n  );\n};\n\nexport default RegisterView;\n\n// <>\n//   <h1>Register</h1>\n//   <form onSubmit={handleSubmit}>\n//     <label>\n//       Name\n//       <input onChange={handleChange} type=\"text\" name=\"name\" value={name} />\n//     </label>\n//     <label>\n//       Email\n//       <input\n//         onChange={handleChange}\n//         type=\"email\"\n//         name=\"email\"\n//         value={email}\n//       />\n//     </label>\n//     <label>\n//       Password\n//       <input\n//         onChange={handleChange}\n//         type=\"password\"\n//         name=\"password\"\n//         value={password}\n//       />\n//     </label>\n//     <button type=\"submit\">Register</button>\n//   </form>\n// </>;\n","import { toast } from 'react-toastify';\n\nexport const successToast = text => {\n  toast.success(text, {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'dark',\n  });\n};\n\nexport const errorToast = text => {\n  toast.error(text, {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'dark',\n  });\n};\n\nexport const alreadyExistsToast = text => {\n  toast.warn(text, {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'dark',\n  });\n};\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...buttonProps,\n    ...props,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;"],"names":["dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","isError","useSelector","authSelectors","isLoggedIn","isTryEnter","state","auth","handleChange","target","value","useEffect","successToast","errorToast","className","onSubmit","e","preventDefault","authOperations","controlId","sm","type","placeholder","onChange","disabled","text","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","alreadyExistsToast","Button","React","ref","as","bsPrefix","variant","size","active","props","prefix","useBootstrapPrefix","useButtonProps","tagName","buttonProps","Component","_jsx","classNames","href","displayName","defaultProps"],"sourceRoot":""}